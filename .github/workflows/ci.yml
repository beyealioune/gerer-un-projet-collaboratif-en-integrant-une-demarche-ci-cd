name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontendTests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Use Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x

      - name: Install Front-end Dependencies
        run: npm ci
        working-directory: ./front

      - name: Run Front-end Tests
        run: npm run test:prod || true
        working-directory: ./front

      - name: Upload Karma Report
        uses: actions/upload-artifact@v4
        with:
          name: karma-report
          path: ./front/coverage

  backendTests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Build with Maven
        run: mvn -B package
        working-directory: ./back

      - name: Test with Maven
        run: mvn -B clean test
        working-directory: ./back

      - name: Upload Jacoco Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: ./back/target/site/jacoco

  sonarqube:
    runs-on: ubuntu-latest
    needs: [frontendTests, backendTests]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: SonarQube Scan - Backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "Running SonarQube Scan for Backend..."
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=beyealioune1_beyealioune \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          echo "SonarQube Scan for Backend completed."
        working-directory: ./back

      - name: SonarQube Scan - Frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "Running SonarQube Scan for Frontend..."
          sonar-scanner \
            -Dsonar.projectKey=your_project_key_frontend \
            -Dsonar.sources=./front/src \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          echo "SonarQube Scan for Frontend completed."
        working-directory: ./front

  build:
    runs-on: ubuntu-latest
    needs: [backendTests, frontendTests]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Back-end
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest

      - name: Build and Push Front-end
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
