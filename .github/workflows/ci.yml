name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontendTests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install Front-end Dependencies
        run: npm install
        working-directory: ./front

      - name: Run Front-end Tests
        run: npm test -- --no-fail-on-empty-test-suite || true
        working-directory: ./front

      - name: Upload Karma Report
        uses: actions/upload-artifact@v3
        with:
          name: karma-report
          path: ./front/coverage

  backendTests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Build with Maven
        run: mvn -B package --file ./pom.xml
        working-directory: ./back

      - name: Test with Maven
        run: mvn -B clean test
        working-directory: ./back

      - name: Upload Jacoco Report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: ./back/target/site/jacoco

  sonarqube:
    runs-on: ubuntu-latest
    needs: [frontendTests, backendTests]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn clean verify sonar:sonar \
             -Dsonar.projectKey=beyealioune1_beyealioune \
             -Dsonar.organization=beyealioune1 \
             -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
             -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        working-directory: ./back

  build:
    runs-on: ubuntu-latest
    needs: [backendTests, frontendTests, sonarqube]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Ajoutez les étapes de construction et de déploiement Docker ici

