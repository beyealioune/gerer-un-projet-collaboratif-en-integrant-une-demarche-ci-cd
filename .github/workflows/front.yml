name: Frontend CI/CD
run-name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontendTests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install Front-end Dependencies
        run: npm install
        working-directory: ./front

      - name: Install Angular CLI Globally
        run: npm install -g @angular/cli
        working-directory: ./front

      - name: Run Front-end Tests
        run: ng test --code-coverage --watch=false || true
        working-directory: ./front

      - name: List Coverage Directory
        run: |
          echo "Listing coverage directory:"
          ls -R ./front/coverage || echo "Coverage directory does not exist"
        working-directory: ./front

      - name: Upload Karma Report
        uses: actions/upload-artifact@v4
        with:
          name: karma-report
          path: ./front/coverage

  sonarqube:
    runs-on: ubuntu-latest
    needs: [frontendTests]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install Front-end Dependencies
        run: npm install
        working-directory: ./front

      - name: Install Angular CLI Globally
        run: npm install -g @angular/cli
        working-directory: ./front

      - name: Build Frontend for SonarCloud
        run: ng build --configuration=production
        working-directory: ./front

      - name: SonarCloud Scan - Frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        run: |
          echo "Running SonarCloud Scan for Frontend..."
          npx sonar-scanner \
            -Dsonar.projectKey=your_project_key_here \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.sources=src \
            -Dsonar.tests=src \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
          echo "SonarCloud Scan for Frontend completed."
        working-directory: ./front

  build:
    runs-on: ubuntu-latest
    needs: [frontendTests, sonarqube]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Front-end
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
